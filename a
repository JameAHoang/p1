warning: LF will be replaced by CRLF in src/app/app.module.ts.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in src/app/auth/auth.service.ts.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in src/app/login/login.component.ts.
The file will have its original line endings in your working directory
[1mdiff --git a/src/app/app.module.ts b/src/app/app.module.ts[m
[1mindex 8782624..f7dbaae 100644[m
[1m--- a/src/app/app.module.ts[m
[1m+++ b/src/app/app.module.ts[m
[36m@@ -41,9 +41,10 @@[m [mimport { LoginComponent } from './login/login.component';[m
     MessagesModule,[m
     FormsModule,[m
 [m
[31m-   [m
   ],[m
[31m-  providers: [  [m
[32m+[m[32m  providers: [[m
[32m+[m[32m    LoginComponent,[m
[32m+[m[32m    // AuthService,AuthGuard ,[m
     {[m
     provide: HTTP_INTERCEPTORS,[m
     useClass: AuthTokenInterceptor,[m
[1mdiff --git a/src/app/auth/auth.service.ts b/src/app/auth/auth.service.ts[m
[1mindex 836dd0f..87ecf27 100644[m
[1m--- a/src/app/auth/auth.service.ts[m
[1m+++ b/src/app/auth/auth.service.ts[m
[36m@@ -8,7 +8,7 @@[m [mimport { HttpClient } from '@angular/common/http';[m
   providedIn: 'root'[m
 })[m
 export class AuthService {[m
[31m-[m
[32m+[m[41m  [m
   constructor(private http: HttpClient) { }[m
   login(email: string, password: string): Observable<AuthPayloadRes> {[m
     const url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.FiREBASE_API_KEY}`;[m
[1mdiff --git a/src/app/interceptors/auth-token.interceptor.ts b/src/app/interceptors/auth-token.interceptor.ts[m
[1mindex d51e33a..48effdd 100644[m
[1m--- a/src/app/interceptors/auth-token.interceptor.ts[m
[1m+++ b/src/app/interceptors/auth-token.interceptor.ts[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mimport { LoginComponent } from './../login/login.component';[m
[32m+[m[32mimport { Router } from '@angular/router';[m
 // Angular[m
 import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from "@angular/common/http";[m
 import {Injectable} from "@angular/core";[m
[36m@@ -13,17 +15,20 @@[m [mimport {exhaustMap, take} from "rxjs/operators";[m
 [m
 [m
 export class AuthTokenInterceptor implements HttpInterceptor {[m
[31m-  constructor() {}[m
[32m+[m[32m  constructor(private router: Router, private a: LoginComponent) {}[m
   intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {[m
[32m+[m[32m    let currentUser = this.a.currentUserValue;[m
[32m+[m[32m    if(currentUser&& currentUser.idToken){[m
     var authString = localStorage.getItem('auth') as string;[m
     var auth = JSON.parse(authString);[m
[31m-[m
[31m-    let modifiedReq = req.clone({[m
[32m+[m[32m    console.log(auth);[m
[32m+[m[32m    req = req.clone({[m
       // setHeaders: { Authorization: `Bearer ${auth.idToken}` }[m
 [m
       params: req.params.append('auth', auth.idToken),[m
     });[m
[31m-    return next.handle(modifiedReq);[m
[32m+[m[32m    }[m
[32m+[m[32m    return next.handle(req);[m
   }[m
 [m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/app/login/login.component.ts b/src/app/login/login.component.ts[m
[1mindex 7002dfb..46df2d6 100644[m
[1m--- a/src/app/login/login.component.ts[m
[1m+++ b/src/app/login/login.component.ts[m
[36m@@ -2,6 +2,9 @@[m [mimport { Router } from '@angular/router';[m
 import { AuthService } from './../auth/auth.service';[m
 import { Component, OnInit } from '@angular/core';[m
 import { HttpErrorResponse } from '@angular/common/http';[m
[32m+[m[32mimport { BehaviorSubject, Observable } from 'rxjs';[m
[32m+[m[32mimport { User } from '../auth/models/user.model';[m
[32m+[m[32mimport { AuthPayloadRes } from '../auth/models/auth-payload-res.model';[m
 [m
 @Component({[m
   selector: 'app-login',[m
[36m@@ -9,13 +12,21 @@[m [mimport { HttpErrorResponse } from '@angular/common/http';[m
   styleUrls: ['./login.component.css'][m
 })[m
 export class LoginComponent implements OnInit {[m
[32m+[m[32m  private currentUserSubject: BehaviorSubject<AuthPayloadRes>;[m
[32m+[m[32m  public currentUser: Observable<AuthPayloadRes>;[m
[32m+[m
   isLoginError : boolean = false;[m
[31m-  constructor(private userAuth: AuthService,private router: Router) { [m
[32m+[m[32m  constructor(private userAuth: AuthService,private router: Router,) {[m[41m [m
[32m+[m[32m    this.currentUserSubject = new BehaviorSubject<AuthPayloadRes>(JSON.parse(localStorage.getItem('auth') as string));[m
[32m+[m[32m        this.currentUser = this.currentUserSubject.asObservable();[m
   }[m
 [m
   ngOnInit(): void {[m
 [m
   }[m
[32m+[m[32m  public get currentUserValue():AuthPayloadRes {[m
[32m+[m[32m    return this.currentUserSubject.value;[m
[32m+[m[32m}[m
   OnSubmit(user: string,password:string){[m
     this.userAuth.login(user,password).subscribe([m
     (data)=>{[m
[36m@@ -27,6 +38,7 @@[m [mexport class LoginComponent implements OnInit {[m
       console.log(err)[m
       this.isLoginError= true;[m
     }[m
[32m+[m[41m    [m
     )[m
     console.log(user,password);[m
 [m
